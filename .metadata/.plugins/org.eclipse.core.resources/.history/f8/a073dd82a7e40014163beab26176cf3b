/**
 * Min on top Heap to be used for HeapSort
 * @author josephvolpe
 *
 */
public class MinHeap {

	/** Array to represent the heap */
	private int[] heap;
	
	private int maxItems;
	
	public void buildHeap(int[] arr) {
		heap = arr;
		numItems = arr.length;
		for (int i = numItems/2; i >= 0; i--)
			siftDown(i);
	}
	

	public void siftDown(int i) {
		int toSift = heap[i];
		int parent = i;
		int child = parent * 2 + 1;
		while (child < maxItems) {
			if ((child + 1 < numItems) && (heap[child] > heap[child + 1])) 
				child = child + 1;
			if (toSift > child) {
				heap[parent] = heap[child];
				heap[child] = toSift;
				parent = child;
				child = parent * 2 + 1;
			}
		}
		items[parent] = toSift;
	}
	
	public int removeMin() {
		int toRemove = heap[0];
		heap[0] = items[numItems - 1];
		numItems--;
		siftDown(0);
		return toRemove;
	}
	
	public int getMaxItems() {
		return maxItems;
	}
	

}