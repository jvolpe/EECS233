/**
 * Heap to be used with HeapSort
 * @author josephvolpe
 *
 */
public class Heap {
	
	/** Array to represent the heap */
	private int[] heap;
	
	private int maxItems;
	
	private int numItems;
	
	public Heap(int[] arr) {
		heap = arr;
		maxItems = arr.length;
		numItems = arr.length;
	}
	
	public void buildMaxOnTopHeap() {
		for (int i = numItems/2; i >= 0; i--)
			maxHeapify(i);
	}
	
	public void maxHeapify(int i) {
		int toSift = heap[i];
		int parent = i;
		int child = parent * 2 + 1;
		while (child < numItems) {
			if ((child + 1 < numItems) && (heap[child] < heap[child + 1]))
				child = child + 1;
			if (heap[parent] < heap[child]) {
				heap[parent] = heap[child];
				parent = child;
				child = parent * 2 + 1;
			}
		}
		heap[parent] = toSift;
	}
	
	public int removeMax() {
		int toRemove = heap[0];
		heap[0] = heap[numItems - 1];
		numItems--;
		maxHeapify(0);
		return toRemove;
	}
}
